name: IBM Runtime Quantum Pipeline

on:
  schedule:
    - cron: "0 4 * * *" # 每天 UTC 04:00（台北中午 12:00）
  workflow_dispatch:

jobs:
  runtime-analysis:
    runs-on: ubuntu-latest
    env:
      IBMQ_TOKEN: ${{ secrets.IBMQ_TOKEN }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 🧹 移除殘留 Qiskit & 強制重新安裝乾淨版本
        run: |
          pip uninstall -y qiskit qiskit-terra qiskit-aer qiskit-ibm-provider qiskit-ibm-runtime || true
          pip install --no-cache-dir qiskit==0.44.1
          pip install --no-cache-dir qiskit-aer>=0.12.2
          pip install --no-cache-dir qiskit-ibm-provider>=0.7.0
          pip install --no-cache-dir qiskit-ibm-runtime>=0.10.0

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install qiskit qiskit-ibm-provider qiskit-ibm-runtime
          pip install -r requirements.txt

      - name: 📦 安裝 Qiskit 依賴
        run: |
          pip install --upgrade pip
          pip install qiskit==0.44.1
          pip install qiskit-ibm-provider>=0.7.0
          pip install qiskit-ibm-runtime>=0.10.0
          pip install -r requirements.txt

      - name: 🔍 測試 Qiskit 匯入是否正常
        run: |
          python -c "import qiskit; print('✅ qiskit 路徑:', qiskit.__file__)"

      - name: 🔍 驗證 Qiskit 模組來源
        run: python generate_qasm.py --qubits 5 --samples 10 --output for_ibm.qasm

      - name: 🔍 確認 generate_qasm.py 內容正確
        run: cat generate_qasm.py

      - name: 🤖 Train QNN & Generate QASM
        run: python generate_qasm.py --qubits 5 --samples 10 --output for_ibm.qasm

      - name: 🚀 Submit with Runtime
        run: |
          echo "import os; os.environ['IBMQ_TOKEN'] = '${IBMQ_TOKEN}'" > patch_submit_runtime.py
          cat submit_ibm_job_runtime.py >> patch_submit_runtime.py
          python patch_submit_runtime.py for_ibm.qasm

      - name: ⏳ Wait for result
        run: sleep 30

      - name: 📥 Fetch result via Runtime
        run: |
          JOB_ID=$(cat job_id.txt)
          echo "import os; os.environ['IBMQ_TOKEN'] = '${IBMQ_TOKEN}'" > patch_fetch_runtime.py
          cat fetch_result_runtime.py >> patch_fetch_runtime.py
          python patch_fetch_runtime.py "$JOB_ID"

      - name: 🧠 Analyze result & Save summary
        run: |
          python auto_decision.py > summary.txt

      - name: 💾 Upload analysis artifacts
        uses: actions/upload-artifact@v4
        with:
          name: runtime-analysis-results
          path: |
            ibm_result.json
            summary.txt
            summary.md
            bitstring_stats.csv
